@using System.ComponentModel.DataAnnotations;
@using Document_Management.Utility.Constants
@model Document_Management.Models.Register

@{
    ViewData["Title"] = "Edit User";
}

<h1>Edit User</h1>

<h4>Employee</h4>
<hr />
<div class="row">
    <div class="col">
        <form asp-action="Edit" method="post" class="needs-validation">
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label asp-for="EmployeeNumber" class="form-label"></label>
                <input asp-for="EmployeeNumber" class="form-control" />
                <span asp-validation-for="EmployeeNumber" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="FirstName" class="form-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="LastName" class="form-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Department" class="form-label"></label>
                <select asp-for="Department" asp-items="Model.Departments" class="form-select js-select2">
                    <option value="" selected disabled>-- Select the department --</option>
                </select>
                <span asp-validation-for="Department" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label class="form-label">Access Folders:</label>
                @if (Model.Departments != null)
                {
                    foreach (var department in Model.Departments)
                    {
                        <div>
                            <input type="checkbox" name="AccessFolders" value="@department.Value"/> @department.Text
                        </div>
                    }
                }
            </div>
            <div class="mb-3">
                <label asp-for="Username" class="form-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Password" class="form-label"></label>
                <input name="newPassword" type="password" class="form-control" placeholder="••••••••" />
            </div>
            <div class="mb-3">
                <label asp-for="ConfirmPassword" class="form-label"></label>
                <input name="newConfirmPassword" type="password" class="form-control" placeholder="••••••••" />
            </div>
            <div class="mb-3">
                <label asp-for="Role" class="form-label"></label>
                @Html.DropDownListFor(m => m.Role,
                new SelectList(Enum.GetValues(typeof(Roles))),
                new { @class = "form-control" })
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input type="submit" value="Update" class="btn btn-secondary" />
                <a asp-action="Index" class="btn btn-primary">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
