@using System.ComponentModel.DataAnnotations;
@using Document_Management.Utility.Constants
@model Document_Management.Models.FileDocument

@{
    ViewData["Title"] = "Transfer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Transfer Files</h1>
<hr />
<div class="row">
    <div class="col">
    <form asp-action="Transfer">
        @Html.AntiForgeryToken()
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group mb-3">
            <label asp-for="OriginalFilename" class="form-label"></label>
            <input asp-for="OriginalFilename" class="form-control" disabled readonly />
            <span asp-validation-for="OriginalFilename" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Company" class="form-label"></label>
            <div class="col">
                <select asp-for="Company" asp-items="Model.Companies" class="form-select js-select2" style="width:100%">
                    <option value="" selected disabled>-- Select the company --</option>
                </select>
                <span asp-validation-for="Company" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Year" class="form-label"></label>
            <div class="col">
                <select asp-for="Year" asp-items="Model.Years" class="form-select js-select2" style="width:100%">
                    <option value="" selected disabled>-- Select the year --</option>
                </select>
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Department" class="form-label"></label>
            <div class="col">
                <select asp-for="Department" asp-items="Model.Departments" class="form-select js-select2" style="width:100%">
                    <option value="" selected disabled>-- Select the department --</option>
                </select>
                <span asp-validation-for="Department" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Category" class="form-label"></label>
            <div class="col">
                <select asp-for="Category" asp-items="Model.Categories" class="form-select js-select2" style="width:100%">
                    <option value="" selected disabled>-- Select the category --</option>
                </select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
        </div>
        
        <div class="mb-3" id="subCategoryContainer" style="display: none;">
            <label asp-for="SubCategory" class="form-label"></label>
            <div class="col">
                <select asp-for="SubCategory" asp-items="Model.SubCategories" class="form-select js-select2 full-width" style="width:100%">
                    <option value="" selected disabled>-- Select the sub category --</option>
                </select>
                <span asp-validation-for="SubCategory" class="text-danger"></span>
            </div>
        </div>
        
        <div class="form-group mb-3">
                <input type="submit" value="Transfer" class="btn btn-secondary" />
                <a asp-action="Index" class="btn btn-primary">Back</a>
        </div>
    </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    <script>
        $(document).ready(function () {
            var categoryDropdown = $('#Category');
            var subCategoryDropdown = $('#SubCategory');
            var subCategoryContainer = $('#subCategoryContainer');
            
            // Function to load subcategories
            function loadSubCategories(categoryName, selectedSubCategory) {
                if (!categoryName) {
                    subCategoryContainer.hide();
                    return;
                }
                
                // Clear existing options
                subCategoryDropdown.empty();
                subCategoryDropdown.append('<option value="" selected disabled>-- Select the sub category --</option>');
                
                $.ajax({
                    url: '@Url.Action("GetSubCategories", "Dms")',
                    type: 'GET',
                    data: { categoryName: categoryName },
                    dataType: 'json',
                    success: function (data) {
                        
                        if (data && data.length > 0) {
                            // Populate subcategory dropdown
                            $.each(data, function (index, item) {
                                var option = $('<option></option>').val(item.value).text(item.text);
                                
                                // Set selected if it matches the model value
                                if (selectedSubCategory && item.value == selectedSubCategory) {
                                    option.attr('selected', 'selected');
                                }
                                
                                subCategoryDropdown.append(option);
                            });
                            
                            // Show the subcategory field
                            subCategoryContainer.show();
                        } else {
                            // Hide if no subcategories
                            subCategoryContainer.hide();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching subcategories:', error);
                        console.error('Response:', xhr.responseText);
                        subCategoryContainer.hide();
                    }
                });
            }
            
            // Load subcategories on page load if category is already selected
            var initialCategoryName = categoryDropdown.val();
            var initialSubCategory = '@Model.SubCategory';
            
            if (initialCategoryName) {
                loadSubCategories(initialCategoryName, initialSubCategory);
            }
            
            // Handle category change event
            categoryDropdown.on('change', function () {
                var categoryName = $(this).val();
                loadSubCategories(categoryName, null);
            });
        });
    </script>
}